import com.android.Version

buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["Lucrasdk_kotlinVersion"]

  repositories {
    google()
    gradlePluginPortal()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:7.3.1"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}
apply plugin: "com.android.library"
apply plugin: "kotlin-android"

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["Lucrasdk_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["Lucrasdk_" + name]).toInteger()
}

static def supportsNamespace() {
  def parsed = Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')
  def major = parsed[0].toInteger()
  def minor = parsed[1].toInteger()

  // Namespace support was added in 7.3.0
  if (major == 7 && minor >= 3) {
    return true
  }

  return major >= 8
}

android {
  if (supportsNamespace()) {
    namespace "com.lucrasdk"

    sourceSets {
      main {
        manifest.srcFile "src/main/AndroidManifestNew.xml"
      }
    }
  }

  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
    buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
  }
  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  sourceSets.main {
    java {
      if(isNewArchitectureEnabled()) {
        srcDirs += ['src/newarch',
        // This is needed to build Kotlin project with NewArch enabled
          "${project.buildDir}/generated/source/codegen/java"]
      } else {
        srcDirs += ["src/oldarch", "src/paper/java"]
      }
    }
  }

}

repositories {
  maven { url 'https://zendesk.jfrog.io/zendesk/repo' }
  mavenCentral()
  google()
  maven {
    name = "LucraGithubPackages"
    url = uri("https://maven.pkg.github.com/Lucra-Sports/lucra-android-sdk")
    credentials {
      String gprUser = findProperty('GPR_USER') ?: System.getenv('GPR_USER')
      String gprKey = findProperty('GPR_KEY') ?: System.getenv('GPR_KEY')

      if (!gprUser) {
        throw new GradleException("GPR_USER not set in ~ .gradle/gradle.properties, local gradle.properties or as an environment variable.")
      }
      if (!gprKey) {
        throw new GradleException("GPR_KEY not set in ~ .gradle/gradle.properties, local gradle.properties or as an environment variable.")
      }

      username = gprUser
      password = gprKey
    }
  }
}

def kotlin_version = getExtOrDefault("kotlinVersion")

dependencies {
  implementation("com.lucrasports.sdk:sdk-core:3.1.0-SNAPSHOT-2024-03-27-1711505664")
  implementation("com.lucrasports.sdk:sdk-ui:3.1.0-SNAPSHOT-2024-03-27-1711505664")

  // For < 0.71, this will be from the local maven repo
  // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
  //noinspection GradleDynamicVersion
  implementation "com.facebook.react:react-native"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

if (isNewArchitectureEnabled()) {
  react {
    jsRootDir = file("../src/")
    libraryName = "LucraClient"
    codegenJavaPackageName = "com.lucrasdk"
  }
}
